<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Urls</title>
    <style>
        /* Basic Styles */
        body {
            font-family: 'Poppins', sans-serif;
            background: radial-gradient(circle, #cce0ff 0%, #e0c3fc 100%);
            color: #333;
            margin: 0;
            padding: 0;
            overflow: hidden;
            position: relative;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-size: cover;
        }

        h1 {
            text-align: center;
            color: #fff;
            font-size: 3.5rem;
            margin-top: 20px;
            text-transform: uppercase;
            letter-spacing: 2px;
            position: relative;
            z-index: 1;
        }

        /* Table Styles */
        table {
            width: 90%;
            margin: 50px auto;
            border-collapse: collapse;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            background: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            overflow: hidden;
            position: relative;
            z-index: 1;
        }

        table th, table td {
            padding: 15px;
            border: none;
            text-align: center;
            font-size: 1.1rem;
            color: #262626;
        }

        th {
            background-color: #4E54C8;
            color: #fff;
            font-size: 1.2rem;
        }

        tr:nth-child(even) {
            background-color: rgba(200, 200, 255, 0.5);
        }

        a {
            color: #4E54C8;
            font-weight: bold;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        a:hover {
            color: #7F53AC;
        }

        /* Bubble Animation */
        .bubble {
            position: absolute;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.4));
            opacity: 0.6;
            animation: floatBubble 10s infinite ease-in-out;
        }

        @keyframes floatBubble {
            0% {
                transform: translateY(100vh) scale(0.8);
                opacity: 0;
            }
            50% {
                opacity: 0.7;
            }
            100% {
                transform: translateY(-100vh) scale(1.5);
                opacity: 0;
            }
        }

        /* JavaScript will control the size and position of the bubbles */
    </style>
</head>
<body>
    <h1>Urls created by <%= name %></h1>

    <table>
        <thead>
            <tr>
                <th>S.NO</th>
                <th>SHORTID</th>
                <th>Redirect</th>
                <th>Clicks</th>
                <th>RedirectShort-URL</th>
            </tr>
        </thead>
        <tbody>
            <% allURLS.forEach((url, index) => { %>
            <tr>
                <td><%= index + 1 %></td>
                <td><%= url.shortID %></td>
                <td><%= url.redirectURL %></td>
                <td><%= url.visitHistory?.length %></td>
                <td><a href="http://localhost:8001/url/<%= url.shortID %>" target="_blank">http://localhost:8001/url/<%= url.shortID %></a></td>
            </tr>
            <% }) %>
        </tbody>
    </table>

    <!-- Random Bubbles Floating -->
    <script>
        const numBubbles = 15;  // Adjust this number for more or fewer bubbles

        function createBubble() {
            const bubble = document.createElement('div');
            bubble.classList.add('bubble');

            // Randomize size between 50px and 150px
            const size = Math.random() * 100 + 50 + 'px';
            bubble.style.width = size;
            bubble.style.height = size;

            // Randomize horizontal starting position
            bubble.style.left = Math.random() * 100 + 'vw';

            // Randomize animation duration between 10s and 20s
            bubble.style.animationDuration = Math.random() * 10 + 10 + 's';

            // Append bubble to body
            document.body.appendChild(bubble);

            // Remove the bubble when animation ends
            bubble.addEventListener('animationend', () => {
                bubble.remove();
                createBubble(); // Recursively create a new bubble when one disappears
            });
        }

        // Generate initial set of bubbles
        for (let i = 0; i < numBubbles; i++) {
            createBubble();
        }
    </script>
</body>
</html>
